%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /group/pawsey0001/espinosa/pawseyTraining/Optimising-Serial-Code/game_of_life/exampleOutput/game_of_life.f90
Compiled : 03/09/21  06:37:05
Compiler : Version 8.6.x.x
Ftnlx    : Version 8503 (libcif 85008)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hstatic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries
           -I/opt/cray/pe/perftools/7.0.0/include -DCRAYPAT -homp_trace
           -hpat_trace -L/opt/cray/pe/perftools/7.0.0/lib64 -O3 -hkeepfiles -rm
           -ogame_of_life game_of_life.f90
           -I/opt/cray/pe/cce/8.6.5/cce/x86_64/include/craylibs -I/usr/include
           -L/opt/gcc/6.1.0/snos/lib64 -L/usr/lib64 -L/lib64 -I/usr/include
           -I/opt/cray/pe/mpt/7.7.0/gni/mpich-cray/8.6/include
           -I/opt/cray/pe/libsci/17.12.1/CRAY/8.6/x86_64/include
           -I/opt/cray/rca/2.2.18-6.0.7.1_5.61__g2aa4f39.ari/include
           -I/opt/cray/alps/6.6.43-6.0.7.1_5.61__ga796da32.ari/include
           -I/opt/cray/xpmem/2.2.15-6.0.7.1_5.20__g7549d06.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-6.0.7.1_3.20__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-6.0.7.1_6.16__g45d1b37.ari/include
           -I/opt/cray/pe/pmi/5.0.13/include
           -I/opt/cray/ugni/6.0.14.0-6.0.7.1_3.22__gea11d3d.ari/include
           -I/opt/cray/udreg/2.3.2-6.0.7.1_5.22__g5196236.ari/include
           -I/opt/cray/wlm_detect/1.3.3-6.0.7.1_5.10__g7109084.ari/include
           -I/opt/cray/krca/2.2.4-6.0.7.1_5.56__g8505b97.ari/include
           -I/opt/cray-hss-devel/8.0.0/include -L/opt/cray/dmapp/default/lib64
           -L/opt/cray/pe/mpt/7.7.0/gni/mpich-cray/8.6/lib
           -L/opt/cray/dmapp/default/lib64
           -L/opt/cray/pe/mpt/7.7.0/gni/mpich-cray/8.6/lib
           -L/opt/cray/pe/libsci/17.12.1/CRAY/8.6/x86_64/lib
           -L/opt/cray/rca/2.2.18-6.0.7.1_5.61__g2aa4f39.ari/lib64
           -L/opt/cray/alps/6.6.43-6.0.7.1_5.61__ga796da32.ari/lib64
           -L/opt/cray/xpmem/2.2.15-6.0.7.1_5.20__g7549d06.ari/lib64
           -L/opt/cray/dmapp/7.1.1-6.0.7.1_6.16__g45d1b37.ari/lib64
           -L/opt/cray/pe/pmi/5.0.13/lib64
           -L/opt/cray/ugni/6.0.14.0-6.0.7.1_3.22__gea11d3d.ari/lib64
           -L/opt/cray/udreg/2.3.2-6.0.7.1_5.22__g5196236.ari/lib64
           -L/opt/cray/pe/atp/2.1.1/libApp
           -L/opt/cray/pe/cce/8.6.5/cce/x86_64/lib/pkgconfig/../
           -L/opt/cray/wlm_detect/1.3.3-6.0.7.1_5.10__g7109084.ari/lib64
           -lpthread -lmpichf90_cray -lrt -lpthread -lugni -lpmi
           -lsci_cray_mpi_mp -lm -lf -lsci_cray_mp -lmpich_cray -lrt -lpthread
           -lugni -lpmi -lsci_cray_mp -lcraymp -lm -lpthread -lf -lhugetlbfs
           -lpgas-dmapp -lfi -lu -lrt -ldmapp -lugni -ludreg -lpthread -lm
           -lcray-c++-rts -lstdc++ -lxpmem -ldmapp -lpthread -lpmi -lpthread
           -lalpslli -lpthread -lwlm_detect -lugni -lpthread -lalpsutil
           -lpthread -lrca -ludreg -lquadmath -lm -lomp -lcraymp -lpthread -lrt
           -ldl -lcray-c++-rts -lstdc++ -lm -lmodules -lm -lfi -lm -lquadmath
           -lcraymath -lm -lgfortran -lquadmath -lf -lm -lpthread -lu -lrt -ldl
           -lcray-c++-rts -lstdc++ -lm -lcsup -lstdc++ -lpthread
Program
  Units  : LIFE

ftnlx report
------------
Source   : /group/pawsey0001/espinosa/pawseyTraining/Optimising-Serial-Code/game_of_life/exampleOutput/game_of_life.f90
Date     : 03/09/2021  06:37:12


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
     R - Rerolling            r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.              !----------------------
    2.              !  Conway Game of Life
    3.              !    serial version
    4.              !----------------------
    5.              
    6.              ! This source code is from https://www.citutor.org
    7.              
    8.              program life
    9.                
   10.                implicit none
   11.                integer, parameter :: ni=250, nj=250, nsteps = 10000
   12.                integer :: i, j, n, im, ip, jm, jp, nsum, isum
   13.                integer, allocatable, dimension(:,:) :: old, new
   14.                real :: arand
   15.              
   16.                ! allocate arrays, including room for ghost cells
   17.              
   18.                allocate(old(0:ni+1,0:nj+1), new(0:ni+1,0:nj+1))
   19.              
   20.                ! initialize elements of old to 0 or 1
   21.              
   22.  + 1-------<   do j = 1, nj
   23.  + 1 2-----<      do i = 1, ni
   24.    1 2               call random_number(arand)
   25.    1 2               old(i,j) = nint(arand)
   26.    1 2----->      enddo
   27.    1------->   enddo
   28.              
   29.                !  iterate
   30.              
   31.  + 1-------<   time_iteration: do n = 1, nsteps
   32.    1         
   33.    1              ! corner boundary conditions
   34.    1         
   35.    1              old(0,0) = old(ni,nj)
   36.    1              old(0,nj+1) = old(ni,1)
   37.    1              old(ni+1,nj+1) = old(1,1)
   38.    1              old(ni+1,0) = old(1,nj)
   39.    1         
   40.    1              ! left-right boundary conditions
   41.    1         
   42.  + 1 fr8--<>      old(1:ni,0) = old(1:ni,nj)
   43.    1 f----<>      old(1:ni,nj+1) = old(1:ni,1)
   44.    1         
   45.    1              ! top-bottom boundary conditions
   46.    1         
   47.    1 f----<>      old(0,1:nj) = old(ni,1:nj)
   48.    1 f----<>      old(ni+1,1:nj) = old(1,1:nj)
   49.    1         
   50.  + 1 2-----<      do j = 1, nj
   51.  + 1 2 V---<         do i = 1, ni
   52.    1 2 V     
   53.    1 2 V                im = i - 1
   54.    1 2 V                ip = i + 1
   55.    1 2 V                jm = j - 1
   56.    1 2 V                jp = j + 1
   57.    1 2 V                nsum = old(im,jp) + old(i,jp) + old(ip,jp) &
   58.    1 2 V                     + old(im,j )             + old(ip,j ) &
   59.    1 2 V                     + old(im,jm) + old(i,jm) + old(ip,jm)
   60.    1 2 V     
   61.    1 2 V                select case (nsum)
   62.    1 2 V                case (3)
   63.    1 2 V                   new(i,j) = 1
   64.    1 2 V                case (2)
   65.    1 2 V                   new(i,j) = old(i,j)
   66.    1 2 V                case default
   67.    1 2 V                   new(i,j) = 0
   68.    1 2 V                end select
   69.    1 2 V     
   70.    1 2 V--->         enddo
   71.    1 2----->      enddo
   72.    1         
   73.    1              ! copy new state into old state
   74.    1         
   75.    1 AC---<>      old = new
   76.    1         
   77.    1------->   enddo time_iteration
   78.              
   79.                ! Iterations are done; sum the number of live cells
   80.                
   81.    Vpr2---<>   isum = sum(new(1:ni,1:nj))
   82.                
   83.                ! Print final number of live cells.
   84.              
   85.                write(*,*)"Number of live cells = ",isum
   86.              
   87.                deallocate(old, new)
   88.              
   89.              end program life

ftn-6250 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 22 
  A loop starting at line 22 was not vectorized for an unspecified reason.

ftn-6332 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 23 
  A loop starting at line 23 was not vectorized because it does not map well onto the target architecture.

ftn-6262 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 31 
  A loop starting at line 31 was not vectorized because it contains a call to a subroutine or function on line 75.

ftn-6332 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 42 
  A loop starting at line 42 was not vectorized because it does not map well onto the target architecture.

ftn-6005 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 42 
  A loop starting at line 42 was unrolled 8 times.

ftn-6004 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 43 
  A loop starting at line 43 was fused with the loop starting at line 42.

ftn-6004 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 47 
  A loop starting at line 47 was fused with the loop starting at line 42.

ftn-6004 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 48 
  A loop starting at line 48 was fused with the loop starting at line 42.

ftn-6294 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 50 
  A loop starting at line 50 was not vectorized because a better candidate was found at line 51.

ftn-6375 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 51 
  A loop starting at line 51 would benefit from "!dir$ safe_address".

ftn-6204 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 51 
  A loop starting at line 51 was vectorized.

ftn-6066 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 75 
   A loop nest at line 75 collapsed to a single loop.

ftn-6202 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 75 
  A loop starting at line 75 was replaced by a library call.

ftn-6005 ftn: SCALAR LIFE, File = game_of_life.f90, Line = 81 
  A loop starting at line 81 was unrolled 2 times.

ftn-6209 ftn: VECTOR LIFE, File = game_of_life.f90, Line = 81 
  A loop starting at line 81 was partially vectorized.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
