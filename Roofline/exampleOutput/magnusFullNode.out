Measuring Peak Performance Full Node
Number of processors          = 24
Number of threads             = 1
Max threads                   = 24
In parallel?                  = 0
Dynamic threads enabled?      = 0
Nested parallelism supported? = 1
N = 10000, Gflops 856.808769





Measuring Peak Mem Bandwidth Full Node
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 80000000 (elements), Offset = 0 (elements)
Memory per array = 610.4 MiB (= 0.6 GiB).
Total memory required = 1831.1 MiB (= 1.8 GiB).
Each kernel will be executed 100 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 24
Number of Threads counted = 24
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18877 microseconds.
   (= 18877 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           75667.8     0.016999     0.016916     0.019454
Scale:          75901.1     0.017052     0.016864     0.022698
Add:            84499.6     0.022850     0.022722     0.024523
Triad:          84540.4     0.022826     0.022711     0.023692
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
