Measuring Peak Performance Single Core
Number of processors          = 1
Number of threads             = 1
Max threads                   = 1
In parallel?                  = 0
Dynamic threads enabled?      = 0
Nested parallelism supported? = 1
N = 2000, Gflops 45.015614








Measuring Peak Mem Bandwidth Single Core
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 80000000 (elements), Offset = 0 (elements)
Memory per array = 610.4 MiB (= 0.6 GiB).
Total memory required = 1831.1 MiB (= 1.8 GiB).
Each kernel will be executed 100 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 1
Number of Threads counted = 1
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 67425 microseconds.
   (= 67425 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           20613.6     0.062421     0.062095     0.064327
Scale:          19627.4     0.065597     0.065215     0.067370
Add:            20618.3     0.093419     0.093121     0.094711
Triad:          20614.8     0.093477     0.093137     0.094821
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
